"""
Django settings for e_learning project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
import secrets
import string


# Function to generate a random SECRET_KEY
def generate_secret_key(length=50):
    alphabet = string.ascii_letters + string.digits + '!@#$%^&*(-_=+)'
    return ''.join(secrets.choice(alphabet) for _ in range(length))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Set SECRET_KEY using environment variable or generate a random one
SECRET_KEY = os.environ.get("SECRET_KEY", generate_secret_key())

# Ensure SECRET_KEY is set
if not SECRET_KEY:
    raise ValueError("The SECRET_KEY environment variable is not set.")

# DEBUG settings
DEBUG = os.environ.get("DEBUG", "False").lower() == "true"

# DEBUG = True

# ALLOWED_HOSTS settings
ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS", "").split(" ")

# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'debug.log'),
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# Application definition

INSTALLED_APPS = [
    'django.contrib.sitemaps',
    'account_app',
    'home_page_app',
    'admin_page_app',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'admin_page_app.middleware.AdminAccessMiddleware',  # Add your middleware here
    'account_app.middleware.AuthenticationMiddleware',  # Add your middleware here
]

ROOT_URLCONF = 'e_learning.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # Add custom context processors
                'admin_page_app.context_processors.admin_context',
                'account_app.context_processors.instructor_context',
                'account_app.context_processors.student_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'e_learning.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'fahad2023_skillup24',
        'USER': 'fahad2023_skillup24',
        'PASSWORD': 'vf3N4i74%',
        'HOST': 'fahad2023.helioho.st',
        'PORT': '3306',
    }
}

# Message
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.ERROR: 'danger',
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True




# Static files (CSS, JavaScript, Images)

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'), 
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'



# Media files (Images, Videos, etc)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Sessions
SESSION_COOKIE_AGE = 1209600  # 2 weeks in seconds (2 * 7 * 24 * 60 * 60)
SESSION_SAVE_EVERY_REQUEST = True  # Save the session to the database on every request
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # Session will not expire when the browser closes

# Bunny.net API credentials thss how strucrure when you want storage zone
# BUNNY_CDN_ACCESS_KEY = '1d9a7145-e6c5-4f5b-bebbc2001941-5ade-4487'  # Your API key
# BUNNY_CDN_STORAGE_ZONE_NAME = 'skillup24'  # Your storage zone name
# BUNNY_CDN_PULL_ZONE = 'skillup24site'  # Your pull zone name
# BUNNY_CDN_STORAGE_ZONE_ID = '734133'  # Your storage zone ID
# BUNNY_CDN_BASE_URL = f'https://storage.bunnycdn.com/{BUNNY_CDN_STORAGE_ZONE_NAME}/'
# BUNNY_CDN_HOSTNAME = 'skillup24site.b-cdn.net'  # CDN Hostname


BUNNY_STREAM_API_KEY = 'ebc2fa96-60f4-45df-ae2c3b39a98c-5028-4244'
BUNNY_STREAM_LIBRARY_ID = '283752'
BUNNY_STREAM_CDN_HOSTNAME = 'vz-45eef9b4-2cf.b-cdn.net'


# For persistent sessions, consider using the database session backend
SESSION_ENGINE = 'django.contrib.sessions.backends.db'



# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
